"use client";
import { useState, useEffect } from "react";
import { useRouter } from "next/navigation";
import { fetchUsuarios } from "@/lib/UsuarioApi";

interface Usuario {
  Id: number;
  Nome: string;
  RA?: string;
  Email?: string;
  Status: string;
  Senha: string;
}

interface Dados {
  alunos: Usuario[];
  professores: Usuario[];
  responsaveis: Usuario[];
  gestores: Usuario[];
}

export default function LoginPage() {
  const router = useRouter();

  const [usuarios, setUsuarios] = useState<Dados | null>(null);
  const [campoPrincipal, setCampoPrincipal] = useState("");
  const [password, setPassword] = useState("");
  const [tipo, setTipo] = useState("aluno");
  const [error, setError] = useState("");

  useEffect(() => {
    fetchUsuarios()
      .then(setUsuarios)
      .catch((err) => {
        console.error("Erro ao buscar usuários", err);
        setError("Erro ao carregar dados dos usuários.");
      });
  }, []);

  const validateRA = (RA: string) => /^RA\d+$/i.test(RA);

  const handleLogin = () => {
    setError("");

    if (!campoPrincipal.trim() || !password.trim()) {
      setError("Por favor, preencha todos os campos.");
      return;
    }

    if (tipo === "aluno" && !validateRA(campoPrincipal)) {
      setError("RA inválido. Ex: RA1003");
      return;
    }

    if (!usuarios) {
      setError("Dados dos usuários não carregados ainda.");
      return;
    }

    let usuarioEncontrado: Usuario | undefined;

    switch (tipo) {
      case "aluno":
        usuarioEncontrado = usuarios.alunos.find(
          (u) => u.RA?.toLowerCase() === campoPrincipal.toLowerCase()
        );
        break;
      case "professor":
        usuarioEncontrado = usuarios.professores.find(
          (u) => u.Email?.toLowerCase() === campoPrincipal.toLowerCase()
        );
        break;
      case "responsavel":
        usuarioEncontrado = usuarios.responsaveis.find(
          (u) =>
            u.Email?.toLowerCase() === campoPrincipal.toLowerCase() ||
            u.RA === campoPrincipal
        );
        break;
      case "gestor":
        usuarioEncontrado = usuarios.gestores.find(
          (u) => u.Email?.toLowerCase() === campoPrincipal.toLowerCase()
        );
        break;
    }

    if (!usuarioEncontrado) {
      setError(`${tipo.charAt(0).toUpperCase() + tipo.slice(1)} não encontrado.`);
      return;
    }

    if (usuarioEncontrado.Senha !== password) {
      setError("Senha incorreta.");
      return;
    }

    // Redireciona para a página do usuário com o ID
    router.push(`/${tipo}/${usuarioEncontrado.Id}`);
  };

  return (
    <div className="min-h-screen flex text-black">
      <div  className="w-1/2 bg-[#C90076] flex items-center justify-center p-4">
      <div  style={{ position: "relative", top: "-90px", left: "-40px"}}>
      <svg width={"100%"} height={"100%"} viewBox="0 0 459 695" fill="none" xmlns="http://www.w3.org/2000/svg">
        <rect width="1440" height="1020" />
        <rect x="169" y="510" width="29" height="26" fill="#04394E"/>
        <rect x="306" y="658" width="30" height="23" fill="#A7CC15"/>
        <rect x="306" y="599" width="30" height="24" fill="#F56217"/>
        <rect x="306" y="486" width="30" height="23" fill="#F76969"/>
        <rect x="306" y="486" width="30" height="23" fill="#F76969"/>
        <rect x="306" y="429" width="30" height="23" fill="#A7CC15"/>
        <rect x="358" y="634" width="101" height="59" fill="#2986CC"/>
        <rect x="416" y="626" width="29" height="23" fill="#2986CC"/>
        <rect x="370" y="626" width="30" height="23" fill="#2986CC"/>
        <rect x="256" y="634" width="102" height="59" fill="#F5CC17"/>
        <rect x="269" y="626" width="29" height="23" fill="#F5CC17"/>
        <rect x="314" y="626" width="30" height="23" fill="#F5CC17"/>
        <rect x="154" y="634" width="102" height="59" fill="#A7CC15"/>
        <rect x="213" y="626" width="29" height="23" fill="#A7CC15"/>
        <rect x="213" y="566" width="29" height="24" fill="#F56217"/>
        <rect x="256" y="576" width="102" height="58" fill="#CDCDCD"/>
        <rect x="269" y="566" width="29" height="24" fill="#CDCDCD"/>
        <rect x="314" y="566" width="30" height="24" fill="#CDCDCD"/>
        <rect x="154" y="576" width="102" height="58" fill="#00875E"/>
        <rect x="358" y="577" width="101" height="60" fill="#F76969"/>
        <rect x="358" y="577" width="101" height="60" fill="#F44336"/>
        <rect x="370" y="569" width="30" height="23" fill="#F76969"/>
        <rect x="370" y="569" width="30" height="23" fill="#F76969"/>
        <rect x="416" y="569" width="29" height="23" fill="#F76969"/>
        <rect x="416" y="569" width="29" height="23" fill="#F44336"/>
        <rect x="154" y="520" width="102" height="60" fill="#2986CC"/>
        <rect x="213" y="510" width="29" height="26" fill="#04394E"/>
        <rect x="358" y="520" width="101" height="60" fill="#F5CC17"/>
        <rect x="370" y="510" width="30" height="26" fill="#F5CC17"/>
        <rect x="416" y="510" width="29" height="26" fill="#F5CC17"/>
        <rect x="256" y="520" width="102" height="60" fill="#A7CC15"/>
        <rect x="269" y="510" width="29" height="26" fill="#A7CC15"/>
        <rect x="314" y="510" width="30" height="26" fill="#A7CC15"/>
        <rect x="358" y="464" width="101" height="58" fill="#CDCDCD"/>
        <rect x="370" y="454" width="30" height="23" fill="#CDCDCD"/>
        <rect x="416" y="454" width="29" height="23" fill="#CDCDCD"/>
        <rect x="154" y="464" width="102" height="58" fill="#F44336"/>
        <rect x="154" y="464" width="102" height="58" fill="#F44336"/>
        <rect x="213" y="454" width="29" height="23" fill="#F76969"/>
        <rect x="213" y="454" width="29" height="23" fill="#F44336"/>
        <rect x="256" y="464" width="102" height="58" fill="#F56217"/>
        <rect x="269" y="454" width="29" height="23" fill="#F56217"/>
        <rect x="314" y="454" width="30" height="23" fill="#F56217"/>
        <rect x="358" y="405" width="101" height="59" fill="#00875E"/>
        <rect x="394" y="398" width="29" height="25" fill="#00875E"/>
        <rect x="256" y="405" width="102" height="59" fill="#F5CC17"/>
        <rect x="269" y="395" width="29" height="25" fill="#F5CC17"/>
        <rect x="314" y="395" width="30" height="25" fill="#F5CC17"/>
        <rect x="154" y="405" width="102" height="59" fill="#A7CC15"/>
        <rect x="213" y="395" width="29" height="25" fill="#A7CC15"/>
        <rect x="206" y="347" width="102" height="58" fill="#F76969"/>
        <rect x="206" y="347" width="102" height="58" fill="#F44336"/>
        <rect x="218" y="338" width="30" height="24" fill="#F44336"/>
        <rect x="218" y="338" width="30" height="24" fill="#F44336"/>
        <rect x="265" y="338" width="28" height="24" fill="#F44336"/>
        <rect x="265" y="338" width="28" height="24" fill="#F44336"/>
        <rect x="256" y="289" width="102" height="58" fill="#CDCDCD"/>
        <rect x="269" y="279" width="29" height="23" fill="#CDCDCD"/>
        <rect x="314" y="279" width="30" height="23" fill="#CDCDCD"/>
        <rect x="308" y="347" width="101" height="58" fill="#04394E"/>
        <rect x="365" y="338" width="30" height="24" fill="#04394E"/>
        <ellipse cx="309.5" cy="549.5" rx="114.5" ry="108.5" fill="white"/>
        <path d="M281.066 563.7L288.986 531.54C287.386 531.22 285.586 530.74 283.586 530.1L283.766 528H298.766C299.446 529.28 299.786 530.48 299.786 531.6C297.586 531.72 295.666 531.84 294.026 531.96L283.586 570H277.946L267.626 534.78L258.266 570H252.026L241.286 531.54C239.686 531.22 237.886 530.74 235.886 530.1L236.066 528H251.666C252.346 529.28 252.686 530.48 252.686 531.6C250.726 531.72 248.926 531.84 247.286 531.96L254.906 563.7H255.146C256.426 558.18 258.146 551.52 260.306 543.72C262.506 535.92 263.966 530.7 264.686 528.06H271.166L280.826 563.7H281.066ZM313.295 532.14L312.995 546.6H322.475L322.955 542.28C324.075 542.28 325.275 542.62 326.555 543.3V554.7L324.455 554.88C323.855 553.16 323.455 551.72 323.255 550.56H312.995C312.915 554.04 312.835 559.18 312.755 565.98H326.495L327.935 560.34L331.415 560.58C331.975 562.86 332.255 564.88 332.255 566.64C332.255 568.36 332.215 569.48 332.135 570H302.975L302.795 567.9C304.555 567.26 306.255 566.8 307.895 566.52C307.655 550.92 307.455 539.32 307.295 531.72C306.415 531.64 304.655 531.16 302.015 530.28L302.315 528H331.235C331.315 528.52 331.355 529.32 331.355 530.4C331.355 532.6 331.075 534.98 330.515 537.54C329.635 537.74 328.475 537.84 327.035 537.84L325.595 532.14H313.295ZM361.878 548.1C364.198 548.38 366.238 549.46 367.998 551.34C369.798 553.22 370.698 555.86 370.698 559.26C370.698 562.62 369.358 565.26 366.678 567.18C364.038 569.06 360.158 570 355.038 570H338.598L338.418 567.9C340.098 567.22 341.818 566.74 343.578 566.46C343.338 551.02 343.138 539.44 342.978 531.72C341.618 531.48 339.858 531 337.698 530.28C337.818 528.8 337.918 528.04 337.998 528H353.058C358.418 528 362.058 528.46 363.978 529.38C364.898 529.82 365.818 530.4 366.738 531.12C368.578 532.56 369.498 534.94 369.498 538.26C369.498 539.94 369.198 541.46 368.598 542.82C368.038 544.14 367.298 545.16 366.378 545.88C364.698 547.2 363.198 547.94 361.878 548.1ZM355.338 550.68H348.678C348.598 554.12 348.518 559.2 348.438 565.92H354.798C361.438 565.92 364.758 563.44 364.758 558.48C364.758 555.6 363.978 553.58 362.418 552.42C360.898 551.26 358.538 550.68 355.338 550.68ZM352.458 532.2L348.858 532.26C348.778 535.94 348.738 540.72 348.738 546.6H354.618C358.138 546.6 360.478 545.94 361.638 544.62C362.838 543.26 363.438 541.12 363.438 538.2C363.438 534.2 359.778 532.2 352.458 532.2Z" fill="black"/>
        <path d="M266.774 591.897C266.213 592.044 265.471 592.117 264.548 592.117C263.63 592.117 262.841 592.002 262.182 591.773C261.528 591.543 260.964 591.204 260.49 590.755C259.475 589.808 258.967 588.489 258.967 586.8C258.967 585.696 259.23 584.744 259.758 583.943C260.471 582.854 261.567 582.161 263.046 581.863C263.5 581.775 264.057 581.731 264.716 581.731C265.375 581.731 265.944 581.763 266.423 581.827V583.233C266.003 583.125 265.402 583.072 264.621 583.072C263.845 583.072 263.208 583.16 262.709 583.335C262.211 583.511 261.799 583.763 261.472 584.09C260.817 584.729 260.49 585.633 260.49 586.8C260.49 587.986 260.812 588.936 261.457 589.649C262.16 590.425 263.164 590.813 264.467 590.813C264.77 590.813 265.051 590.801 265.31 590.777V587.02H266.774V591.897ZM272.67 592.117C269.907 592.117 268.525 590.767 268.525 588.067C268.525 586.905 268.908 585.975 269.675 585.276C270.363 584.642 271.149 584.324 272.033 584.324C272.995 584.324 273.747 584.646 274.289 585.291C274.792 585.892 275.043 586.695 275.043 587.701V588.272H270.048C270.048 589.654 270.612 590.499 271.74 590.806C272.009 590.879 272.421 590.916 272.978 590.916C273.54 590.916 274.089 590.84 274.626 590.689V591.927C274.089 592.054 273.437 592.117 272.67 592.117ZM273.579 587.195C273.579 586.727 273.449 586.331 273.19 586.009C272.888 585.638 272.47 585.452 271.938 585.452C271.376 585.452 270.92 585.63 270.568 585.987C270.246 586.319 270.085 586.722 270.085 587.195H273.579ZM278.508 592.117C277.897 592.117 277.28 592.073 276.655 591.985V590.689C277.29 590.84 277.934 590.916 278.588 590.916C279.897 590.916 280.551 590.64 280.551 590.088C280.551 589.878 280.5 589.722 280.397 589.62C280.246 589.458 280.007 589.297 279.68 589.136L278.61 588.646C277.917 588.299 277.468 588.021 277.263 587.811C276.877 587.42 276.684 586.956 276.684 586.419C276.684 585.813 276.965 585.32 277.526 584.939C278.132 584.529 278.981 584.324 280.075 584.324C280.627 584.324 281.184 584.363 281.745 584.441V585.694C281.13 585.582 280.593 585.525 280.134 585.525C279.68 585.525 279.326 585.555 279.072 585.613C278.823 585.672 278.635 585.745 278.508 585.833C278.308 585.97 278.208 586.148 278.208 586.368C278.208 586.583 278.276 586.758 278.413 586.895C278.554 587.027 278.774 587.171 279.072 587.327L280.148 587.847C280.852 588.213 281.303 588.494 281.503 588.689C281.884 589.061 282.075 589.527 282.075 590.088C282.075 590.689 281.772 591.172 281.167 591.539C280.532 591.924 279.646 592.117 278.508 592.117ZM286.872 590.843C287.033 590.901 287.277 590.931 287.604 590.931C287.932 590.931 288.205 590.892 288.425 590.813V591.985C288.322 592.01 288.173 592.024 287.978 592.029L287.517 592.044C287.414 592.044 287.336 592.044 287.282 592.044C286.34 592.044 285.644 591.736 285.195 591.121C284.833 590.623 284.653 589.964 284.653 589.144V585.562H283.569V584.874L284.653 584.441L285.004 582.566H286.118V584.441H288.461V585.562H286.118V589.136C286.118 590.093 286.369 590.662 286.872 590.843ZM290.747 590.652C290.585 590.374 290.456 590.047 290.358 589.671C290.266 589.295 290.219 588.804 290.219 588.199C290.219 587.593 290.349 587.037 290.607 586.529C290.871 586.016 291.213 585.596 291.633 585.269C292.448 584.639 293.461 584.324 294.672 584.324C295.302 584.324 295.778 584.339 296.101 584.368C296.101 584.368 296.337 584.393 296.811 584.441V592H295.493L295.434 591.128C295.141 591.519 294.694 591.81 294.094 592C293.864 592.073 293.627 592.11 293.383 592.11C293.144 592.11 292.907 592.085 292.673 592.037C292.438 591.988 292.204 591.907 291.97 591.795C291.74 591.683 291.521 591.534 291.311 591.348C291.101 591.158 290.913 590.926 290.747 590.652ZM295.346 585.518C295.034 585.479 294.721 585.459 294.409 585.459C294.101 585.459 293.771 585.516 293.42 585.628C293.068 585.735 292.768 585.906 292.519 586.141C292.001 586.629 291.743 587.374 291.743 588.375C291.743 589.322 291.965 590.022 292.409 590.477C292.746 590.813 293.151 590.982 293.625 590.982C294.235 590.982 294.738 590.76 295.134 590.315C295.231 590.203 295.302 590.103 295.346 590.015V585.518ZM291.208 582.75C291.208 582.198 291.376 581.741 291.713 581.38C292.045 581.019 292.453 580.838 292.937 580.838C293.327 580.838 293.737 581.004 294.167 581.336L294.782 581.805C295.08 582.039 295.329 582.156 295.529 582.156C295.729 582.156 295.888 582.09 296.005 581.958C296.127 581.827 296.188 581.631 296.188 581.373H297.302C297.302 581.924 297.133 582.381 296.796 582.742C296.464 583.104 296.057 583.284 295.573 583.284C295.129 583.284 294.616 583.05 294.035 582.581L293.728 582.332C293.435 582.088 293.186 581.966 292.98 581.966C292.78 581.966 292.619 582.032 292.497 582.164C292.38 582.295 292.321 582.491 292.321 582.75H291.208ZM298.664 588.206C298.664 587.02 299.042 586.058 299.799 585.32C300.507 584.632 301.384 584.288 302.429 584.288C303.454 584.288 304.311 584.632 305 585.32C305.732 586.053 306.098 587.015 306.098 588.206C306.098 589.393 305.729 590.35 304.992 591.077C304.294 591.771 303.437 592.117 302.421 592.117C301.391 592.117 300.517 591.771 299.799 591.077C299.042 590.35 298.664 589.393 298.664 588.206ZM300.188 588.206C300.188 589.456 300.588 590.306 301.389 590.755C301.672 590.911 302.011 590.989 302.407 590.989C302.802 590.989 303.137 590.911 303.41 590.755C303.684 590.594 303.908 590.384 304.084 590.125C304.411 589.627 304.575 588.987 304.575 588.206C304.575 586.966 304.182 586.116 303.396 585.657C303.122 585.496 302.795 585.416 302.414 585.416C302.033 585.416 301.701 585.496 301.418 585.657C301.14 585.813 300.91 586.021 300.729 586.28C300.368 586.788 300.188 587.43 300.188 588.206ZM312.888 581.805H319.472V583.079H314.353V586.082H318.227V587.312H314.353V590.711H319.472V592H312.888V581.805ZM323.508 592.117C322.897 592.117 322.28 592.073 321.655 591.985V590.689C322.29 590.84 322.934 590.916 323.588 590.916C324.897 590.916 325.551 590.64 325.551 590.088C325.551 589.878 325.5 589.722 325.397 589.62C325.246 589.458 325.007 589.297 324.68 589.136L323.61 588.646C322.917 588.299 322.468 588.021 322.263 587.811C321.877 587.42 321.684 586.956 321.684 586.419C321.684 585.813 321.965 585.32 322.526 584.939C323.132 584.529 323.981 584.324 325.075 584.324C325.627 584.324 326.184 584.363 326.745 584.441V585.694C326.13 585.582 325.593 585.525 325.134 585.525C324.68 585.525 324.326 585.555 324.072 585.613C323.823 585.672 323.635 585.745 323.508 585.833C323.308 585.97 323.208 586.148 323.208 586.368C323.208 586.583 323.276 586.758 323.413 586.895C323.554 587.027 323.774 587.171 324.072 587.327L325.148 587.847C325.852 588.213 326.303 588.494 326.503 588.689C326.884 589.061 327.075 589.527 327.075 590.088C327.075 590.689 326.772 591.172 326.167 591.539C325.532 591.924 324.646 592.117 323.508 592.117ZM334.582 591.978C334.289 592.071 333.781 592.117 333.059 592.117C332.336 592.117 331.721 592.029 331.213 591.854C330.71 591.678 330.28 591.419 329.924 591.077C329.187 590.369 328.818 589.388 328.818 588.133C328.818 586.917 329.26 585.96 330.144 585.262C330.935 584.637 331.906 584.324 333.059 584.324C333.771 584.324 334.26 584.349 334.523 584.397V585.701C334.113 585.569 333.645 585.503 333.117 585.503C332.595 585.503 332.16 585.577 331.813 585.723C331.467 585.865 331.184 586.058 330.964 586.302C330.549 586.766 330.341 587.376 330.341 588.133C330.341 589.412 330.803 590.264 331.726 590.689C332.053 590.84 332.373 590.916 332.685 590.916C332.998 590.916 333.237 590.909 333.403 590.894C333.574 590.879 333.735 590.86 333.886 590.835C334.208 590.782 334.44 590.726 334.582 590.667V591.978ZM336.149 588.206C336.149 587.02 336.528 586.058 337.285 585.32C337.993 584.632 338.869 584.288 339.914 584.288C340.939 584.288 341.796 584.632 342.485 585.32C343.217 586.053 343.583 587.015 343.583 588.206C343.583 589.393 343.215 590.35 342.478 591.077C341.779 591.771 340.922 592.117 339.907 592.117C338.876 592.117 338.002 591.771 337.285 591.077C336.528 590.35 336.149 589.393 336.149 588.206ZM337.673 588.206C337.673 589.456 338.073 590.306 338.874 590.755C339.157 590.911 339.497 590.989 339.892 590.989C340.288 590.989 340.622 590.911 340.896 590.755C341.169 590.594 341.394 590.384 341.569 590.125C341.896 589.627 342.06 588.987 342.06 588.206C342.06 586.966 341.667 586.116 340.881 585.657C340.607 585.496 340.28 585.416 339.899 585.416C339.519 585.416 339.187 585.496 338.903 585.657C338.625 585.813 338.396 586.021 338.215 586.28C337.854 586.788 337.673 587.43 337.673 588.206ZM345.7 581.102H347.165V589.136C347.165 590.103 347.385 590.672 347.824 590.843C347.971 590.901 348.127 590.931 348.293 590.931C348.459 590.931 348.608 590.911 348.74 590.872V592L348.469 592.029C348.381 592.039 348.295 592.044 348.212 592.044C347.275 592.044 346.599 591.736 346.184 591.121C345.861 590.638 345.7 589.979 345.7 589.144V581.102ZM350.732 590.652C350.571 590.374 350.441 590.047 350.344 589.671C350.251 589.295 350.205 588.804 350.205 588.199C350.205 587.593 350.334 587.037 350.593 586.529C350.856 586.016 351.198 585.596 351.618 585.269C352.434 584.639 353.447 584.324 354.658 584.324C355.288 584.324 355.764 584.339 356.086 584.368C356.086 584.368 356.323 584.393 356.796 584.441V592H355.478L355.419 591.128C355.126 591.519 354.68 591.81 354.079 592C353.85 592.073 353.613 592.11 353.369 592.11C353.129 592.11 352.893 592.085 352.658 592.037C352.424 591.988 352.189 591.907 351.955 591.795C351.726 591.683 351.506 591.534 351.296 591.348C351.086 591.158 350.898 590.926 350.732 590.652ZM355.332 585.518C355.019 585.479 354.707 585.459 354.394 585.459C354.086 585.459 353.757 585.516 353.405 585.628C353.054 585.735 352.753 585.906 352.504 586.141C351.987 586.629 351.728 587.374 351.728 588.375C351.728 589.322 351.95 590.022 352.395 590.477C352.731 590.813 353.137 590.982 353.61 590.982C354.221 590.982 354.724 590.76 355.119 590.315C355.217 590.203 355.288 590.103 355.332 590.015V585.518ZM363.945 585.782C363.676 585.704 363.354 585.665 362.978 585.665C362.607 585.665 362.302 585.704 362.062 585.782C361.823 585.855 361.613 585.945 361.433 586.053C361.101 586.248 360.859 586.468 360.708 586.712V592H359.243V584.441H360.649L360.708 585.489C361.074 585.03 361.608 584.686 362.312 584.456C362.565 584.368 362.856 584.324 363.183 584.324C363.51 584.324 363.764 584.349 363.945 584.397V585.782Z" fill="black"/>
        <defs>
        <clipPath id="clip0_2_2">
        <rect width="1440" height="1020" fill="white"/>
        </clipPath>
        </defs>
        </svg>
        </div>
      </div>


      {/* Lado direito */}
      <div className="w-1/2 bg-white flex flex-col items-center justify-center text-black px-8 py-10">
        <h2 className="text-2xl font-semibold text-center mb-6">Login</h2>

        <div className="w-full max-w-md">
          <div className="mb-4">
            <label className="block text-left mb-1">Tipo de usuário</label>
            <select
              value={tipo}
              onChange={(e) => {
                setTipo(e.target.value);
                setCampoPrincipal("");
                setPassword("");
                setError("");
              }}
              className="w-full px-4 py-2 border rounded-lg text-black"
            >
              <option value="aluno">Aluno</option>
              <option value="professor">Professor</option>
              <option value="responsavel">Responsável</option>
              <option value="gestor">Gestor</option>
            </select>
          </div>

          {/* Campo dinâmico */}
          {(() => {
            switch (tipo) {
              case "aluno":
                return (
                  <div className="mb-4">
                    <label className="block text-left mb-1">RA (Registro Acadêmico)</label>
                    <input
                      type="text"
                      placeholder="Ex: RA1003"
                      value={campoPrincipal}
                      onChange={(e) => setCampoPrincipal(e.target.value)}
                      className="w-full px-4 py-2 border rounded-lg text-black"
                    />
                  </div>
                );
              case "professor":
                return (
                  <div className="mb-4">
                    <label className="block text-left mb-1">Email Institucional</label>
                    <input
                      type="email"
                      placeholder="professor@escola.com"
                      value={campoPrincipal}
                      onChange={(e) => setCampoPrincipal(e.target.value)}
                      className="w-full px-4 py-2 border rounded-lg text-black"
                    />
                  </div>
                );
              case "responsavel":
                return (
                  <div className="mb-4">
                    <label className="block text-left mb-1">Email</label>
                    <input
                      type="text"
                      placeholder="Responsável@escola.com"
                      value={campoPrincipal}
                      onChange={(e) => setCampoPrincipal(e.target.value)}
                      className="w-full px-4 py-2 border rounded-lg text-black"
                    />
                  </div>
                );
              case "gestor":
                return (
                  <div className="mb-4">
                    <label className="block text-left mb-1">Email Administrativo</label>
                    <input
                      type="email"
                      placeholder="gestor@escola.com"
                      value={campoPrincipal}
                      onChange={(e) => setCampoPrincipal(e.target.value)}
                      className="w-full px-4 py-2 border rounded-lg text-black"
                    />
                  </div>
                );
              default:
                return null;
            }
          })()}

          <input
            type="password"
            placeholder="Senha"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
            className="w-full mb-2 px-4 py-2 border rounded-lg text-black"
          />

          <a
            href="/esqueceu-senha"
            className="text-xs mb-4 block text-right hover:underline text-black"
          >
            Esqueceu a senha?
          </a>

          {error && <p className="text-red-500 mb-4">{error}</p>}

          <button
            onClick={handleLogin}
            className="w-full bg-green-700 hover:bg-green-800 text-white py-2 rounded-lg transition"
          >
            Entrar
          </button>

          <p className="text-sm mt-4 text-center text-black">
            Não tem conta?{" "}
            <a href="/cadastro" className="text-black underline hover:text-gray-700">
              Se cadastre...
            </a>
          </p>
        </div>
      </div>
    </div>
  );
}
